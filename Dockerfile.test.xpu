ARG UBUNTU_VERSION=22.04
FROM ubuntu:${UBUNTU_VERSION}

# arguments for the build. UBUNTU_VERSION needs to be repeated because
# the first usage only applies to the FROM tag.
ARG UBUNTU_VERSION=22.04
ARG ICD_VER=23.05.25593.18-601~22.04
ARG LEVEL_ZERO_GPU_VER=1.3.25593.18-601~22.04
ARG LEVEL_ZERO_VER=1.9.4+i589~22.04
ARG LEVEL_ZERO_DEV_VER=1.9.4+i589~22.04
ARG DPCPP_VER=2023.1.0-46305
ARG MKL_VER=2023.1.0-46342
ARG CCL_VER=2021.9.0-43543
ARG PYTHON_VERSION="3.10"
ARG TENSORFLOW_PACKAGE=tensorflow==2.12.0

# to avoid interaction with apt-get
ENV DEBIAN_FRONTEND=noninteractive

# set default shell to /bin/bash
SHELL ["/bin/bash", "-euo", "pipefail", "-c"]

# Log given ARGs (and all other environment vars)
RUN env | sort

# install essential packages
RUN apt-get update -qq && apt-get install -y --no-install-recommends software-properties-common && \
    rm -rf /var/lib/apt/lists/*

RUN apt-get update -qq && apt-get install -y --allow-downgrades --allow-change-held-packages --no-install-recommends --fix-missing \
        wget \
        ca-certificates \
        cmake \
        openssh-client \
        openssh-server \
        git \
        build-essential \
        moreutils \
        clinfo \
        curl \
        gnupg2 \
        gpg-agent \
        rsync \
        sudo \
        unzip && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# install intel gpu drivers
RUN wget -qO - https://repositories.intel.com/graphics/intel-graphics.key | \
    gpg --dearmor --output /usr/share/keyrings/intel-graphics.gpg
RUN echo 'deb [arch=amd64 signed-by=/usr/share/keyrings/intel-graphics.gpg] https://repositories.intel.com/graphics/ubuntu jammy max' | \
    tee  /etc/apt/sources.list.d/intel.gpu.jammy.list
RUN apt-get update && \
    apt-get install -y --no-install-recommends --fix-missing \
    intel-opencl-icd=${ICD_VER} \
    intel-level-zero-gpu=${LEVEL_ZERO_GPU_VER} \
    level-zero=${LEVEL_ZERO_VER} \
    level-zero-dev=${LEVEL_ZERO_DEV_VER} && \
    apt-get clean && \
    rm -rf  /var/lib/apt/lists/*

# install intel oneapi basekit
RUN wget -O- https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB \
   | gpg --dearmor | tee /usr/share/keyrings/oneapi-archive-keyring.gpg > /dev/null && \
   echo "deb [signed-by=/usr/share/keyrings/oneapi-archive-keyring.gpg] https://apt.repos.intel.com/oneapi all main" \
   | tee /etc/apt/sources.list.d/oneAPI.list
RUN apt-get update && \
    apt-get install -y --no-install-recommends --fix-missing \
    intel-oneapi-compiler-dpcpp-cpp=${DPCPP_VER} \
    intel-oneapi-mkl=${MKL_VER} \
    intel-oneapi-ccl=${CCL_VER} \
    intel-oneapi-ccl-devel=${CCL_VER} && \
    apt-get clean && \
    rm -rf  /var/lib/apt/lists/*
RUN echo "intelpython=exclude" > $HOME/cfg.txt

# install python.
RUN apt-get update -qq && apt-get install -y python${PYTHON_VERSION} python${PYTHON_VERSION}-dev python${PYTHON_VERSION}-distutils && \
    rm -rf /var/lib/apt/lists/*
RUN ln -s -f /usr/bin/python${PYTHON_VERSION} /usr/bin/python
RUN ln -s -f /usr/bin/python${PYTHON_VERSION} /usr/bin/python${PYTHON_VERSION/%.*/}
RUN wget --progress=dot:mega https://bootstrap.pypa.io/get-pip.py && python get-pip.py && rm get-pip.py

RUN pip install --no-cache-dir -U --force requests pytest mock pytest-forked parameterized setuptools

# install TensorFlow (releases).
RUN pip --no-cache-dir install ${TENSORFLOW_PACKAGE}

# install Horovod.
COPY . /horovod

RUN source /opt/intel/oneapi/setvars.sh && \
    env && \
    cd /horovod && \
    python setup.py sdist && \
    bash -c "CC=icx CXX=icpx pip install --no-cache-dir horovod -f /horovod/dist/horovod-*.tar.gz"

# show the effective python package version to easily spot version differences
RUN pip freeze | sort
